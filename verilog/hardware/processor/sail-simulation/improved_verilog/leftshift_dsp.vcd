$date
	Sun Jun  6 12:31:31 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module leftshift_dsp_tb $end
$var wire 32 ! out [31:0] $end
$var reg 32 " input1 [31:0] $end
$var reg 32 # input2 [31:0] $end
$scope module LSDSP $end
$var wire 32 $ input1 [31:0] $end
$var wire 32 % input2 [31:0] $end
$var wire 32 & out [31:0] $end
$scope module i_sbmac16 $end
$var wire 16 ' A [15:0] $end
$var wire 1 ( ACCUMCI $end
$var wire 1 ) ADDSUBBOT $end
$var wire 1 * ADDSUBTOP $end
$var wire 1 + AHOLD $end
$var wire 16 , B [15:0] $end
$var wire 1 - BHOLD $end
$var wire 16 . C [15:0] $end
$var wire 1 / CE $end
$var wire 1 0 CHOLD $end
$var wire 1 1 CI $end
$var wire 1 2 CLK $end
$var wire 1 3 CO $end
$var wire 16 4 D [15:0] $end
$var wire 1 5 DHOLD $end
$var wire 1 6 HCI $end
$var wire 1 7 IRSTBOT $end
$var wire 1 8 IRSTTOP $end
$var wire 1 9 LCI $end
$var wire 1 : OHOLDBOT $end
$var wire 1 ; OHOLDTOP $end
$var wire 1 < OLOADBOT $end
$var wire 1 = OLOADTOP $end
$var wire 1 > ORSTBOT $end
$var wire 1 ? ORSTTOP $end
$var wire 1 @ SIGNEXTIN $end
$var wire 1 A clock $end
$var wire 16 B iA [15:0] $end
$var wire 16 C iB [15:0] $end
$var wire 16 D iC [15:0] $end
$var wire 16 E iD [15:0] $end
$var wire 16 F iF [15:0] $end
$var wire 16 G iG [15:0] $end
$var wire 32 H iH [31:0] $end
$var wire 16 I iJ [15:0] $end
$var wire 16 J iK [15:0] $end
$var wire 16 K iP [15:0] $end
$var wire 16 L iR [15:0] $end
$var wire 16 M iW [15:0] $end
$var wire 16 N iX [15:0] $end
$var wire 16 O iY [15:0] $end
$var wire 16 P iZ [15:0] $end
$var wire 16 Q p_Al_Bl [15:0] $end
$var wire 16 R p_Al_Bh [15:0] $end
$var wire 16 S p_Ah_Bl [15:0] $end
$var wire 16 T p_Ah_Bh [15:0] $end
$var wire 16 U iS [15:0] $end
$var wire 16 V iQ [15:0] $end
$var wire 32 W iL [31:0] $end
$var wire 24 X iK_e [23:0] $end
$var wire 24 Y iJ_e [23:0] $end
$var wire 16 Z YZ [15:0] $end
$var wire 16 [ XW [15:0] $end
$var wire 1 \ SIGNEXTOUT $end
$var wire 16 ] Ol [15:0] $end
$var wire 16 ^ Oh [15:0] $end
$var wire 32 _ O [31:0] $end
$var wire 1 ` LCO $end
$var wire 16 a Bl [15:0] $end
$var wire 16 b Bh [15:0] $end
$var wire 16 c Al [15:0] $end
$var wire 16 d Ah [15:0] $end
$var wire 1 e ACCUMCO $end
$var reg 16 f rA [15:0] $end
$var reg 16 g rB [15:0] $end
$var reg 16 h rC [15:0] $end
$var reg 16 i rD [15:0] $end
$var reg 16 j rF [15:0] $end
$var reg 16 k rG [15:0] $end
$var reg 32 l rH [31:0] $end
$var reg 16 m rJ [15:0] $end
$var reg 16 n rK [15:0] $end
$var reg 16 o rQ [15:0] $end
$var reg 16 p rS [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
xe
b0 d
b101 c
b0 b
b10 a
x`
b1010 _
b0 ^
b1010 ]
0\
bx [
bx Z
b0 Y
b0 X
b1010 W
bx V
bx U
b0 T
b0 S
b0 R
b1010 Q
b10 P
bx O
b101 N
bx M
bx L
bx K
b0 J
b0 I
b1010 H
b1010 G
b0 F
b0 E
b0 D
b10 C
b101 B
xA
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
b0 4
x3
z2
01
00
0/
b0 .
0-
b10 ,
0+
0*
0)
z(
b101 '
b1010 &
b10 %
b101 $
b10 #
b101 "
b1010 !
$end
#2
b100 !
b100 &
b100 _
b100 ]
b100 a
b100 H
b100 W
b100 G
b100 Q
b1 c
b100 P
b100 C
b100 ,
b1 N
b1 B
b1 '
b100 #
b100 %
b1 "
b1 $
#4
b101101 !
b101101 &
b101101 _
b101101 ]
b1111 a
b101101 H
b101101 W
b101101 G
b101101 Q
b11 c
b1111 P
b1111 C
b1111 ,
b11 N
b11 B
b11 '
b1111 #
b1111 %
b11 "
b11 $
#6
b11001 ^
b110010111011011100100 !
b110010111011011100100 &
b110010111011011100100 _
b111011011100100 ]
b11010 a
1\
b1100101100100 X
b1100101100100 J
b1100101100100 S
b11111010 d
b110010111011011100100 H
b110010111011011100100 W
b1001011100100 G
b1001011100100 Q
b10111010 c
b11010 P
b11010 C
b11010 ,
b1111101010111010 N
b1111101010111010 B
b1111101010111010 '
b11010 #
b11010 %
b1111101010111010 "
b1111101010111010 $
#8
b11110 ^
b111101111111111100001 !
b111101111111111100001 &
b111101111111111100001 _
b1111111111100001 ]
b11111 a
b1111011100001 X
b1111011100001 J
b1111011100001 S
b11111111 d
b111101111111111100001 H
b111101111111111100001 W
b1111011100001 G
b1111011100001 Q
b11111111 c
b11111 P
b11111 C
b11111 ,
b1111111111111111 D
b1111111111111111 .
b1111111111111111 N
b1111111111111111 B
b1111111111111111 '
b11111 #
b11111 %
b11111111111111111111111111111111 "
b11111111111111111111111111111111 $
#10
